
input {
    cloudwatch_logs {
        log_group => [ "blancopago-api"]
        # log_group => [ "" ]
        access_key_id => "" 
        secret_access_key => ""
        region => "us-west-2"
        type => "api-log"
    }

    # file {
    #     # path => "/var/log/shortlog"
    #     path => "/usr/share/logstash/api.log"
    #     # start_position => "beginning"
    #     # ignore_older => 0
    #     # path => "/home/rcerqueira/Downloads/access_log"
    #     type => "log"   
    # }

    # tcp{
    #     port => 10000
    #     type => "api-log"
    # }
}

filter{


    if [type] == "api-log"{
        json{
            source => "message"
            target => "parsedJson"
        }  

        date {
            match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z"]
            remove_field => "timestamp"
        }
        mutate { 
            add_field => { "method" => "%{[parsedJson][method]}" }
            add_field => { "clientip" => "%{[parsedJson][ip]}" }
            add_field => { "response" => "%{[parsedJson][status-code]}" }
            convert => { "response" => "integer" }
            add_field => { "request" => "%{[parsedJson][url]}" }
            add_field => { "hostname" => "%{[parsedJson][hostname]}" }
            add_field => { "httpversion" => "%{[parsedJson][http-version]}" }
            add_field => { "responsetime" => "%{[parsedJson][response-time]}" }
            convert => { "responsetime" => "float" }
            replace => { "message" => "%{[parsedJson][msg]}" }
            remove_field => "parsedJson"
        }	

        geoip{
            source => "clientip"
            fields => [ "city_name", "country_name", "location", "region_name" ]
        }    
    }
    if [type] == "apache" {

        grok{
            match => {
                "message" => ["%{IPORHOST:clientip} %{HTTPDUSER:ident} %{HTTPDUSER:auth} \[%{HTTPDATE:timestamp}\] \"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\" %{NUMBER:response} (?:%{NUMBER:bytes}|-)", "%{DATA:weird_host} %{HTTPDUSER:ident} %{HTTPDUSER:auth} \[%{HTTPDATE:timestamp}\] \"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\" %{NUMBER:response} (?:%{NUMBER:bytes}|-)"]
            }
        }
        json{
            source => "message"
            target => "parsedJson"
        }  

        geoip{
            source => "clientip"
            fields => [ "city_name", "country_name", "location", "region_name" ]
        }
    }
}

output {

    elasticsearch {
        index => "api-logs-%{+YYYY.MM.dd}"
        # document_type => "system_logs"
        hosts => ["localhost:9200"]
    }

    # stdout{
    #     codec => json
    # }
    stdout { codec => rubydebug }
    # file{
    #     path => "/home/rcerqueira/Proyectos/output.json"
    # }

}